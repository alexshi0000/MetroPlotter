/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package default_package;
import javax.swing.*;
import java.util.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.ComponentListener;
import java.awt.event.ComponentEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
/**
 *
 * @author lx_user
 */
public class MetroGUI extends javax.swing.JFrame implements ComponentListener, MouseListener{
    /*
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Graph = new javax.swing.JPanel();
        FunctionField = new javax.swing.JTextField();
        PlotButton = new javax.swing.JPanel();
        Plot = new java.awt.Label();
        Prompt = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Zoom = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Minus = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Metro Plotter");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(56, 69, 98));
        setForeground(java.awt.Color.lightGray);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        Graph.setBackground(new java.awt.Color(51, 59, 84));
        Graph.setForeground(new java.awt.Color(255, 255, 255));
        Graph.setPreferredSize(new java.awt.Dimension(706, 706));
        Graph.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                GraphMouseDragged(evt);
            }
        });
        Graph.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                GraphMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                GraphMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout GraphLayout = new javax.swing.GroupLayout(Graph);
        Graph.setLayout(GraphLayout);
        GraphLayout.setHorizontalGroup(
            GraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 785, Short.MAX_VALUE)
        );
        GraphLayout.setVerticalGroup(
            GraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
        );

        FunctionField.setBackground(new java.awt.Color(51, 59, 84));
        FunctionField.setFont(new java.awt.Font("Dialog", 2, 24)); // NOI18N
        FunctionField.setForeground(new java.awt.Color(255, 118, 188));
        FunctionField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        FunctionField.setText("  function goes here");
        FunctionField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 118, 188), 1, true));
        FunctionField.setCaretColor(new java.awt.Color(86, 197, 255));
        FunctionField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        FunctionField.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        FunctionField.setMargin(new java.awt.Insets(50, 50, 50, 50));
        FunctionField.setSelectionColor(new java.awt.Color(51, 51, 51));
        FunctionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FunctionFieldActionPerformed(evt);
            }
        });
        FunctionField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FunctionFieldKeyPressed(evt);
            }
        });

        PlotButton.setBackground(new java.awt.Color(0, 203, 155));
        PlotButton.setForeground(new java.awt.Color(0, 203, 155));
        PlotButton.setToolTipText("Press to plot");
        PlotButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PlotButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PlotButtonMouseClicked(evt);
            }
        });

        Plot.setAlignment(java.awt.Label.CENTER);
        Plot.setFont(new java.awt.Font("Ubuntu Light", 1, 24)); // NOI18N
        Plot.setForeground(new java.awt.Color(235, 240, 241));
        Plot.setText("plot");
        Plot.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PlotMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout PlotButtonLayout = new javax.swing.GroupLayout(PlotButton);
        PlotButton.setLayout(PlotButtonLayout);
        PlotButtonLayout.setHorizontalGroup(
            PlotButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlotButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Plot, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addContainerGap())
        );
        PlotButtonLayout.setVerticalGroup(
            PlotButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlotButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Plot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Prompt.setBackground(new java.awt.Color(51, 59, 84));

        jLabel1.setBackground(new java.awt.Color(51, 59, 84));
        jLabel1.setFont(new java.awt.Font("Dialog", 2, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 118, 188));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("y =");

        javax.swing.GroupLayout PromptLayout = new javax.swing.GroupLayout(Prompt);
        Prompt.setLayout(PromptLayout);
        PromptLayout.setHorizontalGroup(
            PromptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PromptLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );
        PromptLayout.setVerticalGroup(
            PromptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
        );

        Zoom.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Zoom.setOpaque(false);
        Zoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ZoomMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 150, 73));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("+");

        javax.swing.GroupLayout ZoomLayout = new javax.swing.GroupLayout(Zoom);
        Zoom.setLayout(ZoomLayout);
        ZoomLayout.setHorizontalGroup(
            ZoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );
        ZoomLayout.setVerticalGroup(
            ZoomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ZoomLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        Minus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Minus.setOpaque(false);
        Minus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MinusMouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 150, 73));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("-");

        javax.swing.GroupLayout MinusLayout = new javax.swing.GroupLayout(Minus);
        Minus.setLayout(MinusLayout);
        MinusLayout.setHorizontalGroup(
            MinusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );
        MinusLayout.setVerticalGroup(
            MinusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jLabel3.setBackground(new java.awt.Color(51, 51, 51));
        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 150, 73));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("     MetroPlotter 0.2V");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Prompt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FunctionField, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PlotButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(Graph, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Minus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Zoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Zoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Minus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Graph, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(FunctionField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Prompt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(PlotButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        Graph.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void mousePressed(MouseEvent e) {
    
    }

    public void mouseReleased(MouseEvent e) {
       
    }

    public void mouseEntered(MouseEvent e) {
       
    }

    public void mouseExited(MouseEvent e) {
       
    }

    public void mouseClicked(MouseEvent e) {
        FunctionPanel.drawPOIX = ((double)e.getX() / (double)Graph.getWidth()) * 
                (FunctionPanel.upperBoundX - FunctionPanel.lowerBoundX) + FunctionPanel.lowerBoundX;
        FunctionPanel.redrawFunction = true;
        updateUI();
    }
    
    private void updateUI(){
        window.Graph.add(new FunctionPanel(),BorderLayout.CENTER);
        window.setVisible(true);
    }
    
    private void PlotButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PlotButtonMouseClicked
        /*FunctionPanel.resize = true;
        Main.mainLoop(FunctionField.getText());
        FunctionPanel.resize = false;*/
        FunctionPanel.restoreDefaultSettings();
        String userInput = FunctionField.getText();
        FunctionPanel.function = userInput;
        FunctionPanel.redrawFunction = true;
        updateUI();
    }//GEN-LAST:event_PlotButtonMouseClicked

    private void FunctionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FunctionFieldActionPerformed

    }//GEN-LAST:event_FunctionFieldActionPerformed

    private void PlotMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PlotMouseClicked
        PlotButtonMouseClicked(evt);
    }//GEN-LAST:event_PlotMouseClicked

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        PlotButtonMouseClicked(null);
    }//GEN-LAST:event_formComponentResized

    private void MinusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinusMouseClicked
            FunctionPanel.lowerBoundX *= 1.2;
            FunctionPanel.upperBoundX *= 1.2;
            FunctionPanel.lowerBoundY *= 1.2;
            FunctionPanel.upperBoundY *= 1.2;
            FunctionPanel.resolution *= 1.2;
            FunctionPanel.redrawFunction = true;
            updateUI();
            FunctionPanel.drawPOIX = -1;
    }//GEN-LAST:event_MinusMouseClicked

    private void ZoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ZoomMouseClicked
            FunctionPanel.lowerBoundX /= 1.2;
            FunctionPanel.upperBoundX /= 1.2;
            FunctionPanel.lowerBoundY /= 1.2;
            FunctionPanel.upperBoundY /= 1.2;
            FunctionPanel.resolution /= 1.2;
            FunctionPanel.redrawFunction = true;
            updateUI();
            FunctionPanel.drawPOIX = -1;
    }//GEN-LAST:event_ZoomMouseClicked
    //FIX MOUSE DRAGGING BUG
    double y1 = 0, x1 = 0, x2 = 0, y2 = 0;
    private void GraphMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GraphMousePressed
        FunctionPanel.drawPOIX = -1;
        y1 = evt.getY();
        x1 = evt.getX();
    }//GEN-LAST:event_GraphMousePressed

    private void GraphMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GraphMouseReleased
        
    }//GEN-LAST:event_GraphMouseReleased

    private void GraphMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GraphMouseDragged
        x2 = evt.getX();
        y2 = evt.getY();
        double x = x2 - x1;
        double y = y2 - y1;
        x *= 0.4;
        y *= 0.4;
        if(x > 60)
            x = 60;
        if(y > 60)
            y = 60;
        FunctionPanel.lowerBoundY += ((double)y/(double)Graph.getHeight()) *Math.abs((FunctionPanel.lowerBoundY-FunctionPanel.upperBoundY));
        FunctionPanel.upperBoundY += ((double)y/(double)Graph.getHeight()) *Math.abs((FunctionPanel.lowerBoundY-FunctionPanel.upperBoundY));
        FunctionPanel.lowerBoundX -= ((double)x/(double)Graph.getWidth()) *Math.abs((FunctionPanel.upperBoundX-FunctionPanel.lowerBoundX));
        FunctionPanel.upperBoundX -= ((double)x/(double)Graph.getWidth()) *Math.abs((FunctionPanel.upperBoundX-FunctionPanel.lowerBoundX));
        FunctionPanel.redrawFunction = true;
        updateUI();
        y1 = y2;
        x1 = x2;
        FunctionPanel.drawPOIX = -1;
    }//GEN-LAST:event_GraphMouseDragged

    private void FunctionFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FunctionFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            String userInput = FunctionField.getText();
            FunctionPanel.restoreDefaultSettings();
            FunctionPanel.function = userInput;
            FunctionPanel.redrawFunction = true;
            updateUI();
        }
    }//GEN-LAST:event_FunctionFieldKeyPressed

    public JTextField getFunctionField(){
        return FunctionField;
    }
    public JPanel getGraph(){
        return Graph;
    }
    public JPanel getPlotButton(){
        return PlotButton;
    }
    public MetroGUI() {
        getContentPane().setBackground(new Color(51,59,84));            //set background color
        initComponents();
    }
    public static void main(String args[]) {
        ExpressionSolver.initPrecedence();   //init the shit
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable(){
            public void run(){
                FunctionPanel.restoreDefaultSettings();
                window = new MetroGUI();
                window.Graph.setLayout(new BorderLayout());
                window.Graph.add(new FunctionPanel(),BorderLayout.CENTER);
                window.Graph.addMouseListener(window);
                window.pack();
                window.setVisible(true);
            }
        });
    }
    public void componentResized(ComponentEvent e){
        updateUI();
    }
    public void componentHidden(ComponentEvent e){
        updateUI();
    }
    public void componentShown(ComponentEvent e){
        updateUI();
    }
    public void componentMoved(ComponentEvent e){
        updateUI();
    }
    public static MetroGUI window;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField FunctionField;
    private javax.swing.JPanel Graph;
    private javax.swing.JPanel Minus;
    private java.awt.Label Plot;
    private javax.swing.JPanel PlotButton;
    private javax.swing.JPanel Prompt;
    private javax.swing.JPanel Zoom;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
